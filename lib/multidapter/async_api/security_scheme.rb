# frozen_string_literal: true
# Defines a security scheme that can be used by the operations. Supported schemes are:
#
# User/Password.
# API key (either as user or as password).
# X.509 certificate.
# End-to-end encryption (either symmetric or asymmetric).
# HTTP authentication.
# HTTP API key.
# OAuth2â€™s common flows (Implicit, Resource Owner Protected Credentials, Client Credentials and Authorization Code) as defined in RFC6749.
# OpenID Connect Discovery.

module Multidapter
  module AsyncApi
    class SecurityScheme < Dry::Struct

      # Applies to: Any. REQUIRED. The type of the security scheme. Valid values are
      # "userPassword", "apiKey", "X509", "symmetricEncryption", "asymmetricEncryption", "httpApiKey",
      # "http", oauth2, and openIdConnect.
      attribute :type,                Types::SecuritySchemeType

      # Applies to: Any. A short description for security scheme. 
      # CommonMark syntax MAY be used for rich text representation.
      attribute :description,         Types::String.meta(omittable: true)

      # Applies to: httpApiKey.  REQUIRED. The name of the header, query or cookie parameter to be used.
      attribute :name,                Types::String.meta(omittable: true)

      # Applies to: apiKey and httpApiKey.  REQUIRED. The location of the API key. Valid values are 
      # "user" and "password" for apiKey and "query", "header" or "cookie" for httpApiKey.
      attribute :in,                  Types::Symbol.meta(omittable: true)

      # Applies to: http.  REQUIRED. The name of the HTTP Authorization scheme to be used in the 
      # Authorization header as defined in RFC7235.
      attribute :scheme,              Types::String.meta(omittable: true)

      # Applies to: http ("bearer"). A hint to the client to identify how the bearer token is formatted. 
      # Bearer tokens are usually generated by an authorization server, so this information is primarily for 
      # documentation purposes.
      attribute :bearer_format,       Types::String.meta(omittable: true)

      # Applies to: openIdConnect. REQUIRED. OpenId Connect URL to discover OAuth2 configuration values. 
      # This MUST be in the form of a URL
      attribute :open_id_connect_url, Types::Url.meta(omittable: true)

      # Applies to: oauth2 (OAuth Flows Object).  REQUIRED. An object containing configuration information 
      # for the flow types supported.
      attribute :flows,               Types::Hash.meta(omittable: true)

    end
  end
end
